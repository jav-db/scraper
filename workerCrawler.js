import{p as f,a as i}from"./index.js";const d=/charset=([^;]+)/,n=new Map,p=e=>{const t=d.exec(e);if(!t)return null;const a=t[1].toLowerCase();return a==="utf-8"?null:(n.has(a)||n.set(a,new TextDecoder(a)),s=>n.get(a).decode(s))},o=e=>new Promise(t=>setTimeout(t,e)),h=async(e,t="")=>{if(!e.ok)throw new Error(e.statusText);const a=e.headers.get("content-type"),s=e.redirected?{oriURL:t,newURL:e.url}:null;if(!a.startsWith("text/"))return{...s,ctype:a,body:await e.arrayBuffer()};const c=p(a);return{...s,ctype:a.split(";")[0],body:c?c(await e.arrayBuffer()):await e.text()}};async function*y(){const e=()=>{};for(;;){const t=await f();if(!t){yield null;continue}let a=fetch(t.url).catch(e);yield{url:t.url,useFetch:s=>{a=s}};try{const s=await h(await a,t.url);await i({...t,...s,status:2,date:new Date})}catch(s){await i({...t,status:4,body:s.message??`${s}`,date:new Date})}}}let l=null,r=!0,w="",g=666;self.onmessage=e=>{const t=JSON.parse(e.data);switch(t.origin&&(w=t.origin),t.action){case"start":l();break;case"stop":r=!1;break}};await new Promise(e=>{l=e});let u=new Date;for await(const e of y()){if(!e){if(!r)break;await o(10);continue}const t=g+u-new Date;if(t>0&&await o(t),e.useFetch(fetch(new URL(e.url,w))),!r)break;u=new Date}
